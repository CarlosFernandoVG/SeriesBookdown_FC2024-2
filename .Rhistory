sessionInfo()
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("bookdown")
install.packages("yaml")
install.packages("knitr")
library(tidyverse)
dat_air <- read_csv("/Users/carlosvasquezguerra/Downloads/air+quality")
dat_air <- read_csv("/Users/carlosvasquezguerra/Downloads/air+quality.csv")
dat_air <- read_csv("/Users/carlosvasquezguerra/Downloads/air+quality/AirQualityUCI.csv")
dat_air
dat_air <- read_delim("/Users/carlosvasquezguerra/Downloads/air+quality/AirQualityUCI.csv", ";")
dat_air
library(tsdl)
install.packages("tsdl")
devtools::install_github("FinYang/tsdl")
library(tsdl)
tsdl::tsdl
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
births
birthstimeseries <- ts(births, frequency=12, start=c(1946,1))
birthstimeseries
library(forecast)
autoplot(birthstimeseries)
autoplot(log(birthstimeseries))
forecast::ma(birthstimeseries)
forecast::ma(birthstimeseries, 3)
diff(birthstimeseries)
autoplot(diff(birthstimeseries)9
autoplot(diff(birthstimeseries))
autoplot(log(diff(birthstimeseries)))
(diff(birthstimeseries))
autoplot(diff(birthstimeseries))
ggAcf(diff(birthstimeseries))
autoplot(diff(birthstimeseries, 2))
ggAcf(diff(birthstimeseries, 2))
ggAcf(diff(birthstimeseries, 1))
ggAcf(diff(birthstimeseries, 2))
ggAcf(diff(birthstimeseries, 3))
ggAcf(diff(birthstimeseries, 4))
ggAcf(diff(birthstimeseries, 2))
ggAcf(diff(birthstimeseries, 1))
decompose(diff(birthstimeseries, 1))
autoplot(decompose(diff(birthstimeseries, 1)))
autoplot(decompose(birthstimeseries))
autoplot(diff(birthstimeseries, 1))
library(patchwork)
ggAcf(diff(birthstimeseries, 1)) + ggPacf(diff(birthstimeseries, 1))
ggAcf(birthstimeseries) + ggPacf(birthstimeseries)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
setwd("~/Documents/Ayudantías/2024-1/EIII/Ayudantías/25:08:2023")
tiktok <- read_csv("TikTok profiles dataset (Public web data).csv")
tiktok
unique(tiktok$timestamp)
walmart <- read_csv("walmart.csv")
rm(tiktok)
walmart
walmart %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line()
?ts
as.numeric(format(walmart$Date[1], "%j"))
walmart$Date
walmart %>% mutate(Date = as.Date(Date))
walmart
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y'))
as.numeric(format((walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')))$Date[1], "%j"))
?format
'ts'
?ts
(firstSerie <- ts(data = walmart$Weekly_Sales, start = c(2010, first_day), frequency = 52))
first_day <- as.numeric(format((walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')))$Date[1], "%j"))
(firstSerie <- ts(data = walmart$Weekly_Sales, start = c(2010, first_day), frequency = 52))
(firstSerie <- ts(data = walmart$Weekly_Sales, start = c(2010, first_day), frequency = 1))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Data < as.Date("2012-01-01") & Data > as.Date("2010-12-31"))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31"))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31")) %>% filter(Store == 1)
(firstSerie <- ts(data = (walmart %>% filter(Store == 1))$Weekly_Sales, start = c(2010, first_day), frequency = 52))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31")) %>% filter(Store == 1)
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Store == 1)
(firstSerie <- ts(data = (walmart %>% filter(Store == 1))$Weekly_Sales, start = c(2010, first_day), frequency = 51))
first_day <- as.numeric(format((walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")))$Date[1], "%j"))
first_day
(firstSerie <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))$Weekly_Sales, start = c(2011, first_day), frequency = 52))
walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1)
last_day <- as.numeric(format((walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")))$Date[95], "%j"))
last_day
walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1) %>%
mutate(year = year(Date))
walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1) %>%
mutate(year = year(Date)) %>% group_by(year) %>% summarise(n())
(firstSerie <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))$Weekly_Sales, start = c(2011, first_day),
frequency = 52))
(firstSerie <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))$Weekly_Sales, start = c(2011, 1),
frequency = 52))
walmart
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))
week(as.Date("2012-10-26", format = '%d-%m-%Y'))
as.Date("2012-10-26", format = '%d-%m-%Y')
as.Date("2012-10-26", format = '%d-%m-%Y')
as.Date("2012-10-26", format = '%Y-%m-%d')
week(as.Date("2012-10-26", format = '%Y-%m-%d'))
library(forecast)
autoplot(firstSerie)
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1)) %>% mutate(semana = week(Date))
(firstSerie_full <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))$Weekly_Sales, start = c(2010, 6),
frequency = 52))
(firstSerie_full <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))$Weekly_Sales, start = c(2010, 6),
frequency = 53))
(firstSerie_full <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))$Weekly_Sales, start = c(2010, 6),
frequency = 52))
autoplot(firstSerie_full)
decompose(firstSerie_full)
autoplot(decompose(firstSerie_full))
Acf(firstSerie_full)
forecast::ggAcf(firstSerie_full
forecast::ggAcf(firstSerie_full9
forecast::ggAcf(firstSerie_full)
forecast::ggPacf(firstSerie_full)
forecast::ggAcf(firstSerie_full)
?cor
knitr::opts_chunk$set(echo = TRUE)
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
walmart <- read_csv("walmart.csv")
walmart
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31")) %>% filter(Store == 1)
walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1)
walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1) %>%
mutate(year = year(Date)) %>% group_by(year) %>% summarise(n())
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))
first_day <- as.numeric(format((walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")))$Date[1], "%j"))
last_day <- as.numeric(format((walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")))$Date[95], "%j"))
(firstSerie <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Date > as.Date("2010-12-31")) %>%
filter(Store == 1))$Weekly_Sales, start = c(2011, 1),
frequency = 52))
library(forecast)
autoplot(firstSerie)
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1)) %>% mutate(semana = week(Date))
(walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))
(firstSerie_full <- ts(data = (walmart %>%
mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>%
filter(Store == 1))$Weekly_Sales, start = c(2010, 6),
frequency = 52))
autoplot(firstSerie_full)
autoplot(decompose(firstSerie_full))
forecast::ggAcf(firstSerie_full)
View(walmart)
walmart %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line()
walmart %>% head(50) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line()
walmart %>% head(50)
walmart %>% head(50) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
walmart %>% head(1000) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
walmart %>% head(100) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
walmart %>% head(400) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
walmart %>% mutate(Date = as.Date(Date))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y'))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% ggplot(aes(x = Date, y = Weekly_Sales))
walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y')) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line()
walmart <- walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y'))
ts(walmart$Weekly_Sales)
ts(walmart$Weekly_Sales, start = 2010, frequency = 52)
min(walmart$Date)
max(walmart$Date)
min(walmart$Date)
week(min(walmart$Date))
ts(walmart$Weekly_Sales, start = c(2010, 6), frequency = 52)
walmart
walmart %>% group_by(Date) %>% summarise(n())
walmart
walmart %>% group_by(Store) %>% summarise(n())
walmart  %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31"))
walmart  %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31")) %>% group_by(Store) %>% summarise(n())
walmart %>% filter(Store == 1)
current_data <- (walmart %>% filter(Store == 1))
min(current_data$Date)
year(min(current_data$Date))
serie <- ts(current_data$Weekly_Sales, start = c(year(min(current_data$Date)), week(min(current_data$Date))), frequency = 52)
serie
autplot(serie)
autoplot(serie)
autoplot(decompose(serie))
autoplot(ggAcf(serie))
ggAcf(serie)
ggPacf(serie)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
walmart <- read_csv("walmart.csv")
walmart
walmart %>% head(400) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
walmart <- walmart %>% mutate(Date = as.Date(Date, format = '%d-%m-%Y'))
walmart %>% head(400) %>% ggplot(aes(x = Date, y = Weekly_Sales)) + geom_line(stat = "identity")
ts(walmart$Weekly_Sales, start = 2010)
min(walmart$Date)
max(walmart$Date)
walmart  %>% filter(Date < as.Date("2012-01-01") & Date > as.Date("2010-12-31")) %>% group_by(Store) %>% summarise(n())
ts(walmart$Weekly_Sales, start = 2010) %>% head()
ts(walmart$Weekly_Sales, start = 2010) %>% head(20)
ts(walmart$Weekly_Sales, start = c(2010), frequency = 52)
ts(walmart$Weekly_Sales, start = c(2010), frequency = 52) %>% head(20)
ts(walmart$Weekly_Sales, start = c(2010), frequency = 52)
ts(walmart$Weekly_Sales, start = 2010)
first_store <- walmart %>% filter(Store == 1)
ts(first_store$Weekly_Sales, start = 2010, frequency = 52)
first_store
first_week_Store_1 <- first_store$Date %>% min() %>% week()
last_week_Store_1 <- first_store$Date %>% max() %>% week()
print("Se tienen los datos desde la semana ", first_week_Store_1,
" del 2010 hasta la semana ", last_week_Store_1, " del 2012")
print(c("Se tienen los datos desde la semana ", first_week_Store_1,
" del 2010 hasta la semana ", last_week_Store_1, " del 2012"))
print(paste0("Se tienen los datos desde la semana ", first_week_Store_1,
" del 2010 hasta la semana ", last_week_Store_1, " del 2012"))
ts(first_store$Weekly_Sales, start = c(2010, first_week_Store_1), frequency = 52)
serie_first_store <- (ts(first_store$Weekly_Sales, start = c(2010, first_week_Store_1), frequency = 52))
(serie_first_store <- ts(first_store$Weekly_Sales, start = c(2010, first_week_Store_1), frequency = 52))
serie_first_store %>% autoplot()
serie_first_store %>% decompose()
serie_first_store %>% decompose() %>% autoplot()
serie_first_store %>% ggAcf()
library(patchwork)
(serie_first_store %>% ggAcf()) + (serie_first_store %>% ggPacf())
setwd("~/Documents/Courses/Maestria UNIR/Contenido/Primer Semestre/Análisis e Interpretación de Datos/Actividades/Actividad 3")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
prices <- read_csv("DP_LIVE_01022024174058019.csv")
prices
prices$`Flag Codes` %>% unique(())
prices$`Flag Codes` %>% unique()
prices %>% desc()
prices %>% summary()
prices <- prices %>% select(-`Flag Codes`)
prices
prices %>% dim()
+ Tenemos `prices %>% dim()[0]` datos y para cada indicador `prices %>% dim()[0]` variables
()
+ Tenemos `prices %>% dim()[0]` datos y para cada indicador `(prices %>% dim())[0]` variables
(prices %>% dim())[0]
(prices %>% dim())[1]
+ Tenemos `prices %>% dim()[1]` datos y para cada indicador `(prices %>% dim())[2]` variables
(prices %>% dim())[2]
+ Tenemos `prices %>% dim()[1]` datos y para cada indicador `(prices %>% dim())[2]` variables
`(prices %>% dim())[2]
(prices %>% dim())[2]
(prices %>% dim())[2]
prices %>% dim()[1]
(prices %>% dim())[1]
prices
prices$LOCATION %>% unique()
prices$LOCATION %>% unique() %>% length()
prices$LOCATION
prices$LOCATION %>% table()
+ Tenemos `r (prices %>% dim())[1]` datos y para cada indicador `r (prices %>% dim())[2]` variables
prices$LOCATION %>% table()
prices$LOCATION %>% table() %>% as_tibble()
prices %>% group_by(LOCATION) %>% summarise(n())
prices %>% group_by(LOCATION) %>% summarise(n()) %>% arrange()
prices %>% group_by(LOCATION) %>% summarise(`Cantidad de indicadores` = n()) %>% arrange()
prices %>% group_by(LOCATION) %>% summarise(`Cantidad de indicadores` = n()) %>% arrange(`Cantidad de indicadores`)
prices %>% group_by(LOCATION) %>% summarise(`Cantidad de indicadores` = n()) %>% arrange(desc(`Cantidad de indicadores`))
prices
n_indicadores_pais <- prices %>% group_by(LOCATION) %>% summarise(`Cantidad de indicadores` = n()) %>% arrange(desc(`Cantidad de indicadores`))
n_indicadores_pais
n_indicadores_pais$`Cantidad de indicadores`
n_indicadores_pais$`Cantidad de indicadores` %>% median()
?median
n_indicadores_pais$`Cantidad de indicadores`
n_indicadores_pais$`Cantidad de indicadores` %>% quantile(.50)
- `LOCATION`: País al que hace referencia el indicador por año. Se tienen datos de `r `prices$LOCATION %>% unique() %>% length()` países con un valor mediano de `r n_indicadores_pais$`Cantidad de indicadores` %>% median()``
n_indicadores_pais$Cantidad de indicadores %>% median()
n_indicadores_pais$Cantidad de indicadores %>% median()
median_n_indicadores_pais <- n_indicadores_pais$`Cantidad de indicadores` %>% median()
n_indicadores_pais
n_indicadores_pais <- prices %>% group_by(LOCATION) %>% summarise(Cantidad_indicadores = n()) %>% arrange(desc(Cantidad_indicadores))
n_indicadores_pais
n_indicadores_pais$Cantidad_indicadores %>% min()
n_indicadores_pais$Cantidad_indicadores %>% max()
n_indicadores_pais
n_indicadores_pais %>% ggplot(aes(x = LOCATION, y = Cantidad_indicadores)) + geom_point()
n_indicadores_pais
n_indicadores_pais %>% ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point()
n_indicadores_pais %>% ggplot(aes(x = factor(LOCATION, ordered = T), y = Cantidad_indicadores)) + geom_point()
n_indicadores_pais %>% ggplot(aes(x = factor(LOCATION, ordered = F), y = Cantidad_indicadores)) + geom_point()
n_indicadores_pais
n_indicadores_pais %>% mutate(LOCATION = fct_inorder(LOCATION)) %>% ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point()
n_indicadores_pais %>% mutate(LOCATION = fct_inorder(LOCATION)) %>%
ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point() +
theme_minimal()
n_indicadores_pais %>% mutate(LOCATION = fct_inorder(LOCATION)) %>%
ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point() +
theme_minimal() +
geom_label(x = "")
n_indicadores_pais %>% mutate(LOCATION = fct_inorder(LOCATION)) %>%
ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point() +
theme_minimal() +
xlab("")
n_indicadores_pais %>% mutate(LOCATION = fct_inorder(LOCATION)) %>%
ggplot(aes(x = factor(LOCATION), y = Cantidad_indicadores)) + geom_point() +
theme_minimal() +
xlab("") + ylab("")
librq
library(devtools)
devtools::install_github("calligross/ggthemeassist")
library("ggThemeAssist")
